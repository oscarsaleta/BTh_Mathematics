data2=P(g)-1
library("evir")
# Llegir dades
g=read.table("/home/slenderman/git/tdg-mates/R/Power law/g-terrorism.txt")$V1
#metode1
P=ecdf(g)
data=P(g)
plot(data~g,log="yx")
data2=P(g)-1
plot(data2~g,log="xy")
data2=P(g)-1.001
data2=1.001-P(g)
plot(data2~g,log="xy")
data2=1+1e-5-P(g)
plot(data2~g,log="xy")
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/g-terrorism.txt")$V1;
P=ecdf(x);
plot(data~x,log="xy")
data=P(x);
plot(data~x,log="xy")
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/g-terrorism.txt")$V1;
P=ecdf(x);
data=P(x);
data=1+1e-3-P(x);
plot(data~x,log="xy")
library("evir")
x=read.table("home/slenderman/git/tdg-mates/R/Power law/a-words.txt")$V1;
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/a-words.txt")$V1;
P=ecdf(x);
data=1+1e-3-P(x);
plot(data~x,log="xy")
source('~/git/tdg-mates/R/MLE/a-test.R')
source('~/git/tdg-mates/R/MLE/g-test.R')
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/k-blackouts.txt")$V1;
P=ecdf(x);
data=1+1e-4-P(x);
plot(data~x,log="xy")
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/g-terrorism.txt")$V1
#metode1
P=ecdf(x)
data=P(x)
plot(data~x,log="yx")
#metode2
x.freqs=as.data.frame(table(x))
x.freqs$Relative=as.numeric(prop.table(table(x)))
x.freqs$g=as.numeric(x.freqs$x)
plot(Relative~x,data=x.freqs,log="xy")
#metode3
data=1+1e-4-P(x)
plot(data2~x,log="xy")
jmin=1
xmin=data[jmin]
data.cut=data[data>xmin]
data.cut=data[data<xmin]
data.cut=data.cut-data.cut[1]
data.cut
plot(data.cut~x)
data.cut=data[2:]
data.cut=data;
data.cut[1]=NULL;
data.cut[[1]]=NULL;
data.cut=data[-1]
summary(data)
summary(data.cut)
source("[34]eGPD.R")
source("/home/slenderman/git/tdg-mates/R/MLE/[34]eGPD.R")
source("/home/slenderman/git/tdg-mates/R/MLE/[34]eGPD.R")
x=read.table("/home/slenderman/git/tdg-mates/R/Power law/g-terrorism.txt")$V1
P=ecdf(x)
data=1+1e-4-P(x)
plot(data2~x,log="xy")
for(j in 1:length(x)) {
# Triem xmin
xmin=data[j];
# Tallem les dades
data.cut=data[-j];
# Recoloquem
data.cut=data.cut-data.cut[1];
eGPD(data.cut);
}
for(j in 1:length(x)) {
# Triem xmin
xm=data[j];
# Tallem les dades
data.cut=data[-j];
# Recoloquem
data.cut=data.cut-data.cut[1];
eGPD(data.cut);
}
source('~/git/tdg-mates/R/MLE/alg.R')
source('~/git/tdg-mates/R/MLE/alg.R')
j=5
seq(1,j)
c(seq(1,j))
x=sort(x)
a=c(2,4,6,8,10)
remove=c(1,2,3)
a[-remove]
source('~/git/tdg-mates/R/MLE/alg.R')
warnings()
source('~/git/tdg-mates/R/MLE/alg.R')
source('~/git/tdg-mates/R/MLE/alg.R')
print(eGPD(x.cut))
warnings
warnings()
print.function(eGPD)
plot(x.cut)
length(x)
source('~/git/tdg-mates/R/MLE/alg.R')
print(j,xm,eGPD(x.cut))
printf(c(j,xm,eGPD(x.cut))
printf(c(j,xm,eGPD(x.cut)))
}
source('~/git/tdg-mates/R/MLE/alg.R')
source('~/git/tdg-mates/R/MLE/alg.R')
source('~/git/tdg-mates/R/MLE/alg.R')
x=c(1.7,2.2,14.4,1.1,0.4,20.6,5.3,0.7,1.9,13,12,9.3,1.4,18.7,8.5,25.5,11.6,14.1,22.1,1.1,2.5,14.4,1.7,37.6,0.6,2.2,39,.3,15,11,7.3,22.9,1.7,.1,1.1,.6,9,1.7,7,20.1,.4,2.8,14.1,9.9,10.4,10.7,30,3.6,5.6,30.8,13.3,4.2,25.5,3.4,11.9,21.5,27.6,36.4,2.7,64,1.5,2.5,27.4,1,27.1,20.2,16.8,5.3,9.7,27.5,2.5,27)
x=sort(x);
source("/home/slenderman/git/tdg-mates/R/MLE/[34]eGPD.R")
eGPD(x)
x-(2*seq(1,length(x))/(2*length(x)))^2
eGPD(x)
c(k,psi)=eGPD(x)
param=eGPD(x)
MLE=eGPD(x)
source('~/git/tdg-mates/R/cho-ste.R')
source('~/git/tdg-mates/R/MLE/alg.R')
source('~/git/tdg-mates/R/cho-ste.R')
z=FGPD(x)
z=FGPD(x,MLE$k,MLE$psi)
source('~/git/tdg-mates/R/cho-ste.R')
z=FGPD(x,MLE$k,MLE$psi)
plot(x,z)
plot(x)
W2f(z)
A2f(z)
source('~/git/tdg-mates/R/cho-ste.R')
A2f(z)
source('~/git/tdg-mates/R/cho-ste.R')
W2f(z)
A2f(z)
plot(x,x)
plot(x)
points(x,z)
points(x.excess,z)
plot(x.excess,z)
source('~/git/tdg-mates/R/cho-ste.R')
setwd("/home/slenderman/git/tdg-mates/R/MLE")
ls
ls()
pwd()
source("[34]eGPD.R")
x=rgpd(10000,0.5,beta=1)
fp=function(sigma)
length(x)*(-log(fk(sigma)*sigma)+fk(sigma)-1);
plot(fp(sigma))
plot(sin)
plot(fp)
fk=function(sigma)
-mean(log(1-x/sigma));
plot(fp)
l=c(0.01:10)
l=c(0.01:0.01:10)
l=c(0.01:0.01:10)
l=c(0.01:10:0.0.1)
l=c(0.01:10:0.01
)
0:0.1:10
seq(0,0.1,10)
seq(0,10,0.1)
l=seq(0.1,10,0.1)
plot(fp(l))
fk(l)
fk(0)
fk(1)
fk(2)
1-x/1
log(1-x/1)
fk=function(sigma)
ll=log(1-x/sigma);
fk=function(sigma) {}
fk=function(sigma) {}
fk=function(sigma) {
ll=log(1-x/sigma);
ll[is.nan(ll)]=0;
return -mean(log(ll))
}
plot(fp)
fk(l)
fk=function(sigma) {
ll=log(1-x/sigma);
ll[is.nan(ll)]=0;
return -mean(ll)
}
plot(fp)
